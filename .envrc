use flake
eval "$shellHook"

set -aeu
set -o pipefail

has_util() {
    command -v "$1" > /dev/null 2>&1
}

compute_file_hash() {
    if has_util md5;
    then
        md5 -q
    else
        md5sum
    fi
}

# SETUP PYTHON ENVIRONMENT

PYTHON_BASE_PATH="${PWD}/.direnv/python"
mkdir -p "${PYTHON_BASE_PATH}"

VIRTUAL_ENV_PATH="${PWD}/.venv"

PYTHONPATH="${VIRTUAL_ENV_PATH}/lib/python3.12/site-packages/:${UV_PYTHON_ENV_SITE_PACKAGES}"
PYTHONPYCACHEPREFIX="${PYTHON_BASE_PATH}/pycache"

UV_CACHE_DIR="${PYTHON_BASE_PATH}/uvcache"
UV_HTTP_TIMEOUT=600

if [ ! -e "${VIRTUAL_ENV_PATH}" ]; then
    uv venv "${VIRTUAL_ENV_PATH}"
fi

if [ -e "requirements.pruned.txt" ]; then
    PYTHON_INSTALL_HASH=$(cat flake.lock requirements.pruned.txt | compute_file_hash | cut -f 1 -d " ")
    PYTHON_INSTALL_MARKER="${PYTHON_BASE_PATH}/python-install"

    if [ -e "${PYTHON_INSTALL_MARKER}" ] && [ "$(cat ${PYTHON_INSTALL_MARKER})" == "error" ]; then
        echo -e "\e[31merror: python install incomplete. run: rm ${PYTHON_INSTALL_MARKER} && direnv reload\e[0m" 1>&2
    fi

    if [ ! -e "${PYTHON_INSTALL_MARKER}" ] || { [ "$(cat ${PYTHON_INSTALL_MARKER})" != "error" ] && [ "$(cat ${PYTHON_INSTALL_MARKER})" != "${PYTHON_INSTALL_HASH}" ]; }; then
        uv pip install -r requirements.pruned.txt --no-deps && \
        echo "${PYTHON_INSTALL_HASH}" > "${PYTHON_INSTALL_MARKER}" || \
        echo "error" > "${PYTHON_INSTALL_MARKER}"
    fi
else
    echo -e "\e[31merror: requirements.pruned.txt missing. run: python-requirements-prune && direnv reload\e[0m" 1>&2
fi

if [ -e "${VIRTUAL_ENV_PATH}/bin/activate" ]; then
    source "${VIRTUAL_ENV_PATH}/bin/activate"
fi

unset PS1

